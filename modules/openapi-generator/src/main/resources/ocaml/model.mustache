{{>partial_header}}
{{#models}}
{{#model}}
{{#description}}
 * Schema {{{classname}}} : {{{description}}}
 *)
{{/description}}
{{^description}}
 *)
{{/description}}

{{^isEnum}}
[@@@warning "-32-34"]
open (struct
    include Ppx_yojson_conv_lib.Yojson_conv.Primitives
    type any = Yojson.Safe.t
    let any_of_yojson = Fun.id
    let yojson_of_any = Fun.id
    let pp_any = Yojson.Safe.pp
    let show_any = Yojson.Safe.show
    let string_of_yojson = function
      | `String s -> s
      | `Int i -> string_of_int i
      | _ -> failwith "string_of_yojson: string or int needed"
end)
type t = {
{{#vars}}
    {{#description}}
    (* {{{.}}} *)
    {{/description}}
    {{#isEnum}}
    {{{name}}}: {{^isMap}}Enums.{{/isMap}}{{{datatypeWithEnum}}}{{^isContainer}}{{#required}}{{#defaultValue}}[@yojson.default {{{.}}}]{{/defaultValue}}{{/required}}{{/isContainer}}{{^isContainer}}{{#required}}{{#isNullable}} option [@yojson.default {{#defaultValue}}Some({{{.}}}){{/defaultValue}}{{^defaultValue}}None{{/defaultValue}}]{{/isNullable}}{{/required}}{{/isContainer}}{{^isContainer}}{{^required}} option [@yojson.default {{#defaultValue}}Some({{{.}}}){{/defaultValue}}{{^defaultValue}}None{{/defaultValue}}]{{/required}}{{/isContainer}};
    {{/isEnum}}
    {{^isEnum}}
    {{{name}}}: {{{datatypeWithEnum}}}{{^isContainer}}{{#required}}{{#isNullable}} option{{/isNullable}}{{/required}}{{/isContainer}}{{^isContainer}}{{^required}} option [@yojson.default None]{{/required}}{{/isContainer}}{{#isArray}}{{^defaultValue}} [@default []]{{/defaultValue}}{{/isArray}}{{#isMap}}{{^defaultValue}} [@default (`Assoc [])]{{/defaultValue}}{{/isMap}} [@yojson.key "{{baseName}}"];
    {{/isEnum}}
{{/vars}}
} [@@deriving yojson, show, make] [@@yojson.allow_extra_fields];;
let to_yojson = yojson_of_t
let of_yojson x =
  try
    Ok (t_of_yojson x)
  with
  | Ppx_yojson_conv_lib.Yojson_conv.Of_yojson_error (e, j) ->
      Error (Printf.sprintf "%s: %s" (Printexc.to_string e) (Yojson.Safe.to_string j))

{{/isEnum}}

{{/model}}
{{/models}}
